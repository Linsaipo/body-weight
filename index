<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>體重會員站（手機驗證版）</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@3"></script>
  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-app.js";
    import { getAuth, RecaptchaVerifier, signInWithPhoneNumber, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-auth.js";
    import { getFirestore, collection, addDoc, query, orderBy, onSnapshot, serverTimestamp, doc, deleteDoc } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-firestore.js";

    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
      projectId: "YOUR_PROJECT_ID",
      storageBucket: "YOUR_PROJECT_ID.appspot.com",
      messagingSenderId: "YOUR_SENDER_ID",
      appId: "YOUR_APP_ID"
    };

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getFirestore(app);

    const el = {
      authSection: document.getElementById('auth-section'),
      appSection: document.getElementById('app-section'),
      phone: document.getElementById('phone'),
      code: document.getElementById('code'),
      sendCodeBtn: document.getElementById('sendCodeBtn'),
      verifyBtn: document.getElementById('verifyBtn'),
      logoutBtn: document.getElementById('logoutBtn'),
      meName: document.getElementById('meName'),
      date: document.getElementById('date'),
      weight: document.getElementById('weight'),
      bodyFat: document.getElementById('bodyFat'),
      muscle: document.getElementById('muscle'),
      waist: document.getElementById('waist'),
      note: document.getElementById('note'),
      saveBtn: document.getElementById('saveBtn'),
      tbody: document.getElementById('tbody'),
      chartCanvas: document.getElementById('weightChart'),
      emptyHint: document.getElementById('emptyHint'),
      trend7: document.getElementById('trend7'),
      trend30: document.getElementById('trend30')
    };

    let confirmationResult = null;
    let unsubscribe = null;
    let weightChart = null;

    window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {
      'size': 'invisible'
    });

    el.sendCodeBtn.addEventListener('click', async () => {
      const phone = el.phone.value.trim();
      if (!phone) return alert('請輸入手機號碼');
      try {
        confirmationResult = await signInWithPhoneNumber(auth, phone, window.recaptchaVerifier);
        alert('驗證碼已發送，請查收 SMS');
      } catch (err) {
        alert('發送驗證碼失敗：' + err.message);
      }
    });

    el.verifyBtn.addEventListener('click', async () => {
      const code = el.code.value.trim();
      if (!code) return alert('請輸入驗證碼');
      try {
        await confirmationResult.confirm(code);
      } catch (err) {
        alert('驗證失敗：' + err.message);
      }
    });

    el.logoutBtn.addEventListener('click', async () => {
      await signOut(auth);
    });

    onAuthStateChanged(auth, (user) => {
      if (user) {
        el.meName.textContent = user.phoneNumber;
        el.authSection.classList.add('hidden');
        el.appSection.classList.remove('hidden');
        startUserDataFeed(user.uid);
      } else {
        el.meName.textContent = '';
        el.appSection.classList.add('hidden');
        el.authSection.classList.remove('hidden');
        cleanupUserDataFeed();
      }
    });

    function cleanupUserDataFeed() {
      if (unsubscribe) {
        unsubscribe();
        unsubscribe = null;
      }
      el.tbody.innerHTML = '';
      el.emptyHint.classList.remove('hidden');
      renderChart([]);
      el.trend7.textContent = '—';
      el.trend30.textContent = '—';
    }

    el.saveBtn.addEventListener('click', async () => {
      const user = auth.currentUser;
      if (!user) return alert('請先登入');

      const dateStr = el.date.value;
      const weightVal = parseFloat(el.weight.value);
      if (!dateStr) return alert('請選擇日期');
      if (Number.isNaN(weightVal)) return alert('請輸入體重');

      const entry = {
        date: new Date(dateStr + 'T00:00:00'),
        weight: weightVal,
        bodyFat: el.bodyFat.value ? parseFloat(el.bodyFat.value) : null,
        muscle: el.muscle.value ? parseFloat(el.muscle.value) : null,
        waist: el.waist.value ? parseFloat(el.waist.value) : null,
        note: el.note.value?.trim() || '',
        createdAt: serverTimestamp()
      };
      await addDoc(collection(db, 'users', user.uid, 'entries'), entry);
      el.weight.value = el.bodyFat.value = el.muscle.value = el.waist.value = el.note.value = '';
    });

    function startUserDataFeed(uid) {
      const q = query(collection(db, 'users', uid, 'entries'), orderBy('date', 'asc'));
      unsubscribe = onSnapshot(q, (snap) => {
        const rows = [];
        snap.forEach(docSnap => rows.push({ id: docSnap.id, ...docSnap.data() }));
        renderTable(rows);
        renderChart(rows);
        renderTrends(rows);
      });
    }

    function renderTable(rows) {
      el.tbody.innerHTML = '';
      if (!rows.length) {
        el.emptyHint.classList.remove('hidden');
        return;
      }
      el.emptyHint.classList.add('hidden');
      for (const r of rows) {
        const tr = document.createElement('tr');
        tr.className = 'border-b';
        tr.innerHTML = `<td class='px-3 py-2 text-sm'>${fmtDate(r.date)}</td><td class='px-3 py-2 text-sm font-semibold'>${safeNum(r.weight)}</td><td class='px-3 py-2 text-sm'>${safeNum(r.bodyFat)}</td><td class='px-3 py-2 text-sm'>${safeNum(r.muscle)}</td><td class='px-3 py-2 text-sm'>${safeNum(r.waist)}</td><td class='px-3 py-2 text-sm'>${escapeHtml(r.note || '')}</td><td class='px-3 py-2 text-sm text-right'><button class='text-red-600 hover:underline' data-id='${r.id}'>刪除</button></td>`;
        tr.querySelector('button')?.addEventListener('click', async (e) => {
          const id = e.currentTarget.getAttribute('data-id');
          const user = auth.currentUser;
          await deleteDoc(doc(db, 'users', user.uid, 'entries', id));
        });
        el.tbody.appendChild(tr);
      }
    }

    function renderChart(rows) {
      const points = rows.map(r => ({ x: new Date(r.date?.toDate?.() ? r.date.toDate() : r.date), y: Number(r.weight) }));
      const data = { datasets: [{ label: '體重 (kg)', data: points, tension: 0.3, pointRadius: 3, borderWidth: 2, fill: false }] };
      const options = { responsive: true, maintainAspectRatio: false, scales: { x: { type: 'time', time: { unit: 'day' } }, y: { title: { display: true, text: 'kg' } } } };
      if (weightChart) { weightChart.data = data; weightChart.update(); } else { weightChart = new Chart(el.chartCanvas.getContext('2d'), { type: 'line', data, options }); }
    }

    function renderTrends(rows) {
      if (!rows.length) { el.trend7.textContent = '—'; el.trend30.textContent = '—'; return; }
      const now = new Date();
      const daysAgo = (n) => new Date(now.getFullYear(), now.getMonth(), now.getDate() - n);
      const delta = (r) => { if (!r.length) return null; return +(Number(r[r.length-1].weight) - Number(r[0].weight)).toFixed(1); };
      const r7 = rows.filter(r => new Date(r.date?.toDate?.() ? r.date.toDate() : r.date) >= daysAgo(7));
      const r30 = rows.filter(r => new Date(r.date?.toDate?.() ? r.date.toDate() : r.date) >= daysAgo(30));
      const d7 = delta(r7), d30 = delta(r30);
      el.trend7.textContent = d7 === null ? '—' : (d7 > 0 ? `+${d7} kg` : `${d7} kg`);
      el.trend30.textContent = d30 === null ? '—' : (d30 > 0 ? `+${d30} kg` : `${d30} kg`);
    }

    function fmtDate(tsOrDate) { const d = tsOrDate?.toDate?.() ? tsOrDate.toDate() : new Date(tsOrDate); return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`; }
    function safeNum(v){return (v===null||v===undefined||v==='')?'':Number(v)}
    function escapeHtml(s){return s.replace(/[&<>"']/g,c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;','\'':'&#39;'}[c]))}

    document.addEventListener('DOMContentLoaded', () => {
      const today = new Date();
      el.date.value = `${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,'0')}-${String(today.getDate()).padStart(2,'0')}`;
    });
  </script>
</head>
<body class="bg-slate-50 min-h-dvh">
  <header class="bg-white border-b sticky top-0 z-10">
    <div class="max-w-5xl mx-auto px-4 py-3 flex items-center justify-between">
      <h1 class="text-lg sm:text-xl font-bold">體重會員站（手機驗證版）</h1>
      <div id="user-area" class="text-sm">
        <span id="meName" class="mr-3 text-slate-600"></span>
        <button id="logoutBtn" class="hidden sm:inline-block px-3 py-1.5 rounded-lg bg-slate-900 text-white hover:opacity-90">登出</button>
      </div>
    </div>
  </header>

  <section id="auth-section" class="max-w-md mx-auto px-4 py-8">
    <div class="bg-white rounded-2xl shadow p-6">
      <h2 class="text-xl font-bold mb-4">手機登入 / 註冊</h2>
      <label class="block text-sm mb-1">手機號碼（含 +886）</label>
      <input id="phone" type="tel" class="w-full mb-3 px-3 py-2 rounded border" placeholder="例如：+886912345678" />
      <div id="recaptcha-container"></div>
      <button id="sendCodeBtn" class="w-full mb-3 px-4 py-2 rounded-lg bg-slate-900 text-white">發送驗證碼</button>

      <label class="block text-sm mb-1">驗證碼</label>
      <input id="code" type="text" class="w-full mb-4 px-3 py-2 rounded border" placeholder="輸入簡訊中的6位數" />
      <button id="verifyBtn" class="w-full px-4 py-2 rounded-lg bg-emerald-600 text-white">登入 / 註冊</button>
    </div>
  </section>

  <section id="app-section" class="hidden max-w-5xl mx-auto px-4 py-6">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <div class="lg:col-span-1">
        <div class="bg-white rounded-2xl shadow p-6 sticky top-20">
          <h2 class="text-lg font-bold mb-4">新增身體數據</h2>
          <div class="space-y-3">
            <label class="block text-sm mb-1">日期</label>
            <input id="date" type="date" class="w-full px-3 py-2 rounded border" />
            <label class="block text-sm mb-1">體重 (kg)*</label>
            <input id="weight" type="number" step="0.1" class="w-full px-3 py-2 rounded border" />
            <label class="block text-sm mb-1">體脂率 (%)</label>
            <input id="bodyFat" type="number" step="0.1" class="w-full px-3 py-2 rounded border" />
            <label class="block text-sm mb-1">肌肉率 (%)</label>
            <input id="muscle" type="number" step="0.1" class="w-full px-3 py-2 rounded border" />
            <label class="block text-sm mb-1">腰圍 (cm)</label>
            <input id="waist" type="number" step="0.1" class="w-full px-3 py-2 rounded border" />
            <label class="block text-sm mb-1">備註</label>
            <textarea id="note" rows="2" class="w-full px-3 py-2 rounded border"></textarea>
            <button id="saveBtn" class="w-full mt-2 px-4 py-2 rounded-lg bg-emerald-600 text-white">儲存</button>
          </div>
        </div>
      </div>
      <div class="lg:col-span-2 space-y-6">
        <div class="bg-white rounded-2xl shadow p-6 h-[360px]">
          <div class="flex items-center justify-between mb-3">
            <h2 class="text-lg font-bold">體重走勢圖</h2>
            <div class="text-sm text-slate-600">近7天：<span id="trend7">—</span>，近30天：<span id="trend30">—</span></div>
          </div>
          <canvas id="weightChart" class="w-full h-full"></canvas>
        </div>
        <div class="bg-white rounded-2xl shadow overflow-hidden">
          <div class="p-6 border-b"><h2 class="text-lg font-bold">歷史紀錄</h2></div>
          <div class="overflow-x-auto">
            <table class="min-w-full text-left">
              <thead><tr class="bg-slate-50 border-b text-sm"><th class="px-3 py-2 font-semibold">日期</th><th class="px-3 py-2 font-semibold">體重 (kg)</th><th class="px-3 py-2 font-semibold">體脂率 (%)</th><th class="px-3 py-2 font-semibold">肌肉率 (%)</th><th class="px-3 py-2 font-semibold">腰圍 (cm)</th><th class="px-3 py-2 font-semibold">備註</th><th class="px-3 py-2"></th></tr></thead>
              <tbody id="tbody"></tbody>
            </table>
            <p id="emptyHint" class="px-6 py-6 text-sm text-slate-500">目前沒有資料，請從左側新增一筆紀錄。</p>
          </div>
        </div>
      </div>
    </div>
  </section>
